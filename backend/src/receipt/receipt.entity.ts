import { Column, Entity, ObjectIdColumn } from 'typeorm';
import { Binary, ObjectId } from 'mongodb';
import { ApiProperty } from '@nestjs/swagger';
import { Category } from './receipt.enums';

@Entity('receipt')
export class ReceiptEntity {
  @ApiProperty({
    description:
      'Unique identifier of the receipt, automatically generated by the database',
    example: '650c59a88f1e78c88102d1a4',
  })
  @ObjectIdColumn() // Maps to MongoDB's _id field
  _id: ObjectId;

  @ApiProperty({ description: 'Merchant name', example: 'KFC' })
  @Column()
  merchantName: string;

  @ApiProperty({ description: 'Date of the receipt', example: '2024-09-01' })
  @Column()
  date: string;

  @ApiProperty({ description: 'Total cost', example: '19.99' })
  @Column()
  totalCost: string;

  @ApiProperty({ description: 'Category of spending', example: 'Food' })
  @Column()
  category: Category;

  @ApiProperty({
    description: 'Itemized list of purchased items',
    example: '[{ item_name: "Item 1", item_quantity: 2, item_cost: "10.00" }]',
  })
  @Column()
  itemizedList: Array<{
    itemName: string;
    itemQuantity: number;
    itemCost: string;
  }>;

  @ApiProperty({
    description: 'Receipt image stored as binary data',
  })
  @Column()
  image: Binary;

  @ApiProperty({ description: 'User ID that owns this receipt' })
  @Column()
  userId: string; // Reference to the owning user
}
